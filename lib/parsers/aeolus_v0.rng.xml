<!--

   Copyright (C) 2011 Red Hat, Inc.
   Written by Greg Blomquist <gblomqui@redhat.com>

   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

-->

<grammar xmlns="http://relaxng.org/ns/structure/1.0">

  <start>
    <element name="deployable">
      <optional>
        <!-- make the version attribute optional for backwards compat -->
        <attribute name="version">
          <choice>
            <value>1.0</value>
          </choice>
        </attribute>
      </optional>
      <attribute name="name"><text/></attribute>
      <optional>
        <attribute name="id"><text/></attribute>
      </optional>
      <optional>
        <element name="description"><text/></element>
      </optional>
      <ref name="assemblies-definition"/>
    </element>
  </start>

  <!-- Each assembly describes an instance to launch as part of this deployable
  -->
  <define name="assemblies-definition">
    <element name="assemblies">
      <oneOrMore>
        <element name="assembly">
          <attribute name="name"><text/></attribute>
          <!-- the hwp is the hardware profile that will be matched against a
               provider -->
          <attribute name="hwp"><text/></attribute>
          <!-- the image id corresponds to an image warehouse image id -->
          <element name="image">
            <attribute name="id"><text/></attribute>
            <optional>
              <attribute name="build"><text/></attribute>
            </optional>
          </element>
          <optional>
            <ref name="services-definition"/>
          </optional>
          <optional>
            <ref name="return-values-definition"/>
          </optional>
        </element>
      </oneOrMore>
    </element>
  </define>

  <!-- services describe the configuration that should be included in the
       launched instance -->
  <define name="services-definition">
    <element name="services">
      <oneOrMore>
        <element name="service">
          <attribute name="name"><text/></attribute>
          <optional>
            <element name="description"><text/></element>
          </optional>
          <ref name="service-configuration-definition"/>
        </element>
      </oneOrMore>
    </element>
  </define>

  <!-- service describes the executable, additional files, and runtime
       parameters that should be propagated to the launched instance -->
  <define name="service-configuration-definition">
    <ref name="configuration-executable-definition"/>
    <optional>
      <element name="files">
        <oneOrMore>
          <ref name="configuration-file-definition"/>
        </oneOrMore>
      </element>
    </optional>
    <optional>
      <element name="parameters">
        <oneOrMore>
          <ref name="configuration-parameter-definition"/>
        </oneOrMore>
      </element>
    </optional>
  </define>

  <define name="configuration-executable-definition">
    <element name="executable">
      <choice>
        <attribute name="url"><text/></attribute>
        <element name="contents"><text/></element>
      </choice>
    </element>
  </define>

  <define name="configuration-file-definition">
    <element name="file">
      <choice>
        <attribute name="url"><text/></attribute>
        <element name="contents">
          <attribute name="filename"><text/></attribute>
          <text/>
        </element>
      </choice>
    </element>
  </define>

  <define name="configuration-parameter-definition">
    <element name="parameter">
      <attribute name="name"><text/></attribute>
      <!-- type is deprecated here, it's proper use is on the value
           tag. it can be removed is 1.2 -->
      <optional>
      <attribute name="type">
        <choice>
          <!-- only supporting scalar and password types for now -->
          <value>scalar</value>
          <!-- password types simply indicate that the UI collecting the
               value should obscure the input field's value -->
          <value>password</value>
        </choice>
      </attribute>
      </optional>
      <choice>
        <empty/>
        <element name="value">
            <text/>
            <optional>
            <attribute name="type">
              <choice>
                <!-- only supporting scalar and password types for now -->
                <value>scalar</value>
                <!-- password types simply indicate that the UI collecting the
                     value should obscure the input field's value -->
                <value>password</value>
              </choice>
            </attribute>
            </optional>
        </element>
        <element name="reference">
          <attribute name="assembly"><text/></attribute>
          <choice>
            <attribute name="parameter"><text/></attribute>
            <attribute name="service"><text/></attribute>
          </choice>
        </element>
      </choice>
    </element>
  </define>

  <define name="return-values-definition">
    <element name="returns">
      <oneOrMore>
        <element name="return">
          <attribute name="name"><text/></attribute>
        </element>
      </oneOrMore>
    </element>
  </define>
</grammar>
